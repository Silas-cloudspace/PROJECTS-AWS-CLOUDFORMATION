Description:  This template deploys a VPC with public and private subnets, Internet Gateway, NAT Gateways, and an RDS instance for Keycloak. 
  It also creates security groups and Secrets Manager secrets for the RDS and Keycloak. 
  It is used as a foundation for deploying the Keycloak application on ECS.

#Parameters to be passed to the template at the time of deployment.
#You can customize these parameters or use the default values at the time of deployment.

Parameters:

  ProjectName:
    Description: The project name that is prefixed to resource names
    Type: String
    Default: keycloak

  VpcCIDR:
    Description: The IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: The IP range (CIDR notation) for the public subnet 1 in the first Availability Zone
    Type: String
    Default: 10.0.1.0/24

  PublicSubnet2CIDR: 
    Description: The IP range (CIDR notation) for the public subnet 2 in the second Availability Zone
    Type: String
    Default: 10.0.2.0/24

  ECSPrivateSubnet1CIDR:
    Description: The IP range (CIDR notation) for the private subnet 1 in the first Availability Zone
    Type: String
    Default: 10.0.3.0/24

  ECSPrivateSubnet2CIDR:
    Description: The IP range (CIDR notation) for the private subnet 2 in the second Availability Zone
    Type: String
    Default: 10.0.4.0/24

  RDSPrivateSubnet1CIDR:
    Description: The IP range (CIDR notation) for the RDS private subnet in the first Availability Zone
    Type: String
    Default: 10.0.5.0/24

  RDSPrivateSubnet2CIDR:
    Description: The IP range (CIDR notation) for the RDS private subnet in the second Availability Zone
    Type: String
    Default: 10.0.6.0/24

  DBInstanceIdentifier:
    Description: The database instance identifier
    Type: String
    Default: keycloak-instance

  DBName:
    Description: The name of the database to create
    Type: String
    Default: keycloakdb

  DBUser:
    Description: The database admin account username (Passeword will be generated by Secrets Manager)
    Type: String
    Default: admin1982

  DBAllocatedStorage:
    Description: The size of the database (GB)
    Type: Number
    Default: 20

  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t3.micro 
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large

  KeycloakAdminUsername:
    Description: The Keycloak admin username (Password will be generated by Secrets Manager)
    Type: String
    Default: keycloakadmin

  DomainName:
    Description: The domain name that will be used to create a certificate in ACM for the ALB
    Type: String
    Default: cloudspace-consulting.com

  HostedZoneId:
    Description: The ID of the Route 53 Hosted Zone of the domain to create a certificate in ACM
    Type: String
    Default: Z0386529NFUML87F5GPR

#Condition to check if the HostedZoneId and DomainName parameters are provided to create a certificate in ACM.
Conditions:
  CreateCertificate: !And
    - !Not [!Equals [!Ref DomainName, ""]]
    - !Not [!Equals [!Ref HostedZoneId, ""]]

Resources:

  # KeycloakECSTaskExecutionRole resource creates an IAM role that allows ECS tasks to make API requests to AWS services on your behalf.
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: KeycloakECSTaskExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole 
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # VPC resource creates a virtual network with the specified CIDR block. DNS hostnames and DNS support is enabled
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-VPC

  # InternetGateway resource creates an internet gateway for internet access to the VPC.
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-InternetGateway

  # VPCGatewayAttachment resource attaches the internet gateway to the VPC.
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC 
      InternetGatewayId: !Ref InternetGateway 

  # PublicSubnet1 resource creates a public subnet in the first Availability Zone.
  # This will be used for the the Application Load Balancer and for the Nat Gatwway
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC 
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true 
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-Public-Subnet-AZ1

  # PublicSubnet2 resource creates a public subnet in the second Availability Zone.
  # This will be used for the the Application Load Balancer and for the Nat Gatwway
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC 
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true 
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-Public-Subnet-AZ2

  # ECSPrivateSubnet1 resource creates a private subnet in the first Availability Zone.
  # This will be used for the ECS tasks.
  ECSPrivateSubnet1:
    Type: AWS::EC2::Subnet 
    Properties:
      VpcId: !Ref VPC 
      CidrBlock: !Ref ECSPrivateSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAzs '' ]
      MapPublicIpOnLaunch: false 
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ECS-Private-Subnet-AZ1

  # ECSPrivateSubnet2 resource creates a private subnet in the second Availability Zone.
  # This will be used for the ECS tasks.
  ECSPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC 
      CidrBlock: !Ref ECSPrivateSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAzs '' ]
      MapPublicIpOnLaunch: false 
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ECS-Private-Subnet-AZ2

  # RDSPrivateSubnet1 resource creates a private subnet in the first Availability Zone.
  # This will be used for the RDS instance.
  RDSPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC 
      CidrBlock: !Ref RDSPrivateSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAzs '' ]
      MapPublicIpOnLaunch: false 
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-RDS-Private-Subnet-AZ1

  # RDSPrivateSubnet2 resource creates a private subnet in the second Availability Zone.
  # This will be used for the RDS instance.
  RDSPrivateSubnet2:
    Type: AWS::EC2::Subnet 
    Properties:
      VpcId: !Ref VPC 
      CidrBlock: !!Ref RDSPrivateSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: false 
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-RDS-Private-Subnet-AZ2

  # Elastic IP for the Nat Gateway in AZ1
  # This is used to assign a static IP address to the NAT Gateway in the first Availability Zone.
  NatGateway1EIP:
    Type: AWS::EC2::EIP 
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ElasticIP-AZ1

  # Elastic IP for the Nat Gateway in AZ2
  # This is used to assign a static IP address to the NAT Gateway in the second Availability Zone.
  NatGateway2EIP:
    Type: AWS::EC2::EIP 
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ElasticIp-AZ1

  # Nat Gateway in the first Availability Zone.
  # The NAT Gateway 1 needs to be created in the public subnet 1.
  # This is used to provide outgoing internet access to the ECS task in the private subnet in the first Availability Zone.
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1 
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-Nat-Gateway-AZ1

  # Nat Gateway in the second Availability Zone
  # The NAT Gateway 2 needs to be created in the public subnet 2.
  # This is used to provide outgoing internet access to the ECS task in the private subnet in the second Availability Zone.
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-Nat-Gateway-AZ2


